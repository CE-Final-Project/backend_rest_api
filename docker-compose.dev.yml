version: "3.9"

services:
  account-service:
    container_name: account_service
    build:
      context: .
      dockerfile: docker/dev/account.Dockerfile
    restart: on-failure
    ports:
      - "5001:5001"
    networks:
      - microservices
    depends_on:
      - postgres-game-db
    volumes:
      - ./:/app
    environment:
      TZ: "Asia/Bangkok"
  postgres-game-db:
    container_name: postgres_game_db
    image: postgres:14-alpine
    restart: always
    networks:
      - microservices
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./init_db_script/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    environment:
      TZ: "Asia/Bangkok"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "2iNyADya#bUu9"
      POSTGRES_DB: "root"
  postgres-game-admin:
    container_name: postgres_game_admin
    image: dpage/pgadmin4:6
    restart: on-failure
    ports:
      - "9000:80"
    networks:
      - microservices
    depends_on:
      - postgres-game-db
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@kmitl.ac.th"
      PGADMIN_DEFAULT_PASSWORD: "s8KHf^fLFWHppKtUJf7VtTE"
  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalog:/datalog

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "29092:29092"
    volumes:
      - ./kafka:/bitnami/kafka/data
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper


networks:
  microservices:
    name: microservices